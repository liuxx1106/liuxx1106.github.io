<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>剑指 Offer II 001. 整数除法</title>
    <link href="/2023/07/13/algorithm-offer1/"/>
    <url>/2023/07/13/algorithm-offer1/</url>
    
    <content type="html"><![CDATA[<h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><p><a href="https://leetcode.cn/problems/xoh6Oh/?envType=study-plan-v2&id=coding-interviews-special">leetcode地址</a></p><ul><li>剑指 Offer II 001. 整数除法</li><li>简单</li><li>253</li><li>给定两个整数 a 和 b ，求它们的除法的商 a&#x2F;b ，要求不得使用乘号 ‘*’、除号 ‘&#x2F;‘ 以及求余符号 ‘%’ 。</li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul><li>整数除法的结果应当截去（truncate）其小数部分，例如：truncate(8.345) &#x3D; 8 以及 truncate(-2.7335) &#x3D; -2</li><li>假设我们的环境只能存储 32 位有符号整数，其数值范围是 [−2 ^ 31，2 ^ 31 -1 ]。本题中，如果除法结果溢出，则返回 2^31 − 1</li></ul><blockquote><p>示例 1：<br>  输入：a &#x3D; 15, b &#x3D; 2<br>  输出：7<br>  解释：15&#x2F;2 &#x3D; truncate(7.5) &#x3D; 7<br>  示例 2：<br>  输入：a &#x3D; 7, b &#x3D; -3<br>  输出：-2<br>  解释：7&#x2F;-3 &#x3D; truncate(-2.33333..) &#x3D; -2<br>  示例 3：<br>  输入：a &#x3D; 0, b &#x3D; 1<br>  输出：0<br>  示例 4：<br>  输入：a &#x3D; 1, b &#x3D; 1<br>  输出：1</p></blockquote><ul><li>提示:</li><li>-2 ^ 31 &lt;&#x3D; a, b &lt;&#x3D; 2 ^ 31 - 1</li><li>b !&#x3D; 0<br> *&#x2F;</li></ul><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>题目要求只能使用加减法，那我们自然想到用减法实现除法，用“被减数”能减去几次“减数”来衡量最后的结果，这时候我们想到求x的幂次的快速解法，将x成倍成倍的求幂，这里将减数成倍成倍的增大，次数对应也是成倍成倍的增大，例如：取a&#x3D;23，b&#x3D;2，b的变化如下:2-&gt;4-&gt;8-&gt;16,次数count的变化如下1-&gt;2-&gt;4-&gt;8,最后a-b&#x3D;23-16&#x3D;7，对7再执行一次上述过程，b:2-&gt;4,count:1-&gt;2,a-b&#x3D;3, 然后对3再执行一次，b:2,count:1,a-b&#x3D;1，1已经小于原b&#x3D;2，可以结束了，最后计数一下每轮的count是多少8+2+1&#x3D;11。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>为方便运算，我们需要将a，b都转为同正or同负，由于INT_MIN转正就越界了，我们只好都转负，这也是都转负的原因，有一种特殊情况 INT_MIN&#x2F;(-1)就overflow了 所以直接特殊处理最终结果的正负。</p><h2 id="代码实现（java）"><a href="#代码实现（java）" class="headerlink" title="代码实现（java）"></a>代码实现（java）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">divide</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<br>        <span class="hljs-comment">//特殊情况直接处理</span><br>        <span class="hljs-keyword">if</span> (a == Integer.MIN_VALUE &amp;&amp; b == -<span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> Integer.MAX_VALUE;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (b == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> a;<br>        &#125;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">flag</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>; <span class="hljs-comment">// 记录a,b取反标志，如只有一个取反，则最终结果也要取反</span><br>        <span class="hljs-keyword">if</span> (a &gt; <span class="hljs-number">0</span>) &#123;<br>            flag--;<br>            a = -a;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (b &gt; <span class="hljs-number">0</span>) &#123;<br>            flag--;<br>            b = -b;<br>        &#125;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> calc(a, b);<br>        <span class="hljs-keyword">return</span> flag == <span class="hljs-number">1</span> ? -res : res;<br><br>    &#125;<br><br>    <span class="hljs-comment">// 求a能减去b的次数</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">calc</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (a &lt;= b) &#123; <span class="hljs-comment">// a,b为负数</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">temp</span> <span class="hljs-operator">=</span> b; <span class="hljs-comment">// 临时变量</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; <span class="hljs-comment">// 记录a被减的次数，因为a&gt;b,所以a一定可以被b减一次</span><br>            <span class="hljs-keyword">while</span> (temp &gt;= Integer.MIN_VALUE &gt;&gt; <span class="hljs-number">1</span> &amp;&amp; a &lt;= temp &lt;&lt; <span class="hljs-number">1</span>) &#123; <span class="hljs-comment">// temp应该大于等于最小值的二分之一，否则会导致溢出。a的绝对值应该比temp*2还小</span><br>                count += count; <span class="hljs-comment">// 可以减的次数翻倍</span><br>                temp += temp; <span class="hljs-comment">// 减数也翻倍</span><br>            &#125;<br>            res += count; <span class="hljs-comment">// 可以减的次数累加即为结果</span><br>            a -= temp; <span class="hljs-comment">// a减去当前temp，重新去和b求最大可以减的次数</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="代码实现（golang）"><a href="#代码实现（golang）" class="headerlink" title="代码实现（golang）"></a>代码实现（golang）</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">divide</span><span class="hljs-params">(a <span class="hljs-type">int</span>, b <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>    <span class="hljs-comment">//特殊情况直接处理</span><br>    <span class="hljs-keyword">if</span> a == math.MinInt32 &amp;&amp; b == <span class="hljs-number">-1</span> &#123;<br>        <span class="hljs-keyword">return</span> math.MaxInt32<br>    &#125;<br>    <span class="hljs-keyword">if</span> b == <span class="hljs-number">1</span> &#123;<br>        <span class="hljs-keyword">return</span> a<br>    &#125;<br>    flag := <span class="hljs-number">2</span> <span class="hljs-comment">// 记录a,b取反标志，如只有一个取反，则最终结果也要取反</span><br>    <span class="hljs-keyword">if</span> a &gt; <span class="hljs-number">0</span> &#123;<br>        flag--<br>        a = -a<br>    &#125;<br>    <span class="hljs-keyword">if</span> b &gt; <span class="hljs-number">0</span> &#123;<br>        flag--<br>        b = -b<br>    &#125;<br>    res := calc(a, b)<br>    <span class="hljs-keyword">if</span> flag == <span class="hljs-number">1</span> &#123;<br>        <span class="hljs-keyword">return</span> -res<br>    &#125;<br>    <span class="hljs-keyword">return</span> res<br>&#125;<br><br><span class="hljs-comment">// 求a能减去b的次数</span><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">calc</span><span class="hljs-params">(a <span class="hljs-type">int</span>, b <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>    res := <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> a &lt;= b &#123; <span class="hljs-comment">// a,b为负数</span><br>        temp := b <span class="hljs-comment">// 临时变量</span><br>        count := <span class="hljs-number">1</span> <span class="hljs-comment">// 记录a被减的次数，因为a&gt;b,所以a一定可以被b减一次</span><br>        <span class="hljs-keyword">for</span> temp &gt;= math.MinInt32/<span class="hljs-number">2</span> &amp;&amp; a &lt;= temp&lt;&lt;<span class="hljs-number">1</span> &#123; <span class="hljs-comment">// temp应该大于等于最小值的二分之一，否则会导致溢出。a的绝对值应该比temp*2还小</span><br>            count += count <span class="hljs-comment">// 可以减的次数翻倍</span><br>            temp += temp <span class="hljs-comment">// 减数也翻倍</span><br>        &#125;<br>        res += count <span class="hljs-comment">// 可以减的次数累加即为结果</span><br>        a -= temp <span class="hljs-comment">// a减去当前temp，重新去和b求最大可以减的次数</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> res<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>剑指 Offer II</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LeetCode</tag>
      
      <tag>整数除法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My First Blog</title>
    <link href="/2023/07/13/hello-world/"/>
    <url>/2023/07/13/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
